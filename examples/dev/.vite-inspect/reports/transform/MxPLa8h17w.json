{
  "resolvedId": "D:/MyProject/5/alioth/node_modules/.pnpm/lib0@0.2.80/node_modules/lib0/map.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/**\n * Utility module to work with key-value stores.\n *\n * @module map\n */\n\n/**\n * Creates a new Map instance.\n *\n * @function\n * @return {Map<any, any>}\n *\n * @function\n */\nexport const create = () => new Map()\n\n/**\n * Copy a Map object into a fresh Map object.\n *\n * @function\n * @template X,Y\n * @param {Map<X,Y>} m\n * @return {Map<X,Y>}\n */\nexport const copy = m => {\n  const r = create()\n  m.forEach((v, k) => { r.set(k, v) })\n  return r\n}\n\n/**\n * Get map property. Create T if property is undefined and set T on map.\n *\n * ```js\n * const listeners = map.setIfUndefined(events, 'eventName', set.create)\n * listeners.add(listener)\n * ```\n *\n * @function\n * @template V,K\n * @template {Map<K,V>} MAP\n * @param {MAP} map\n * @param {K} key\n * @param {function():V} createT\n * @return {V}\n */\nexport const setIfUndefined = (map, key, createT) => {\n  let set = map.get(key)\n  if (set === undefined) {\n    map.set(key, set = createT())\n  }\n  return set\n}\n\n/**\n * Creates an Array and populates it with the content of all key-value pairs using the `f(value, key)` function.\n *\n * @function\n * @template K\n * @template V\n * @template R\n * @param {Map<K,V>} m\n * @param {function(V,K):R} f\n * @return {Array<R>}\n */\nexport const map = (m, f) => {\n  const res = []\n  for (const [key, value] of m) {\n    res.push(f(value, key))\n  }\n  return res\n}\n\n/**\n * Tests whether any key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @todo should rename to some - similarly to Array.some\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const any = (m, f) => {\n  for (const [key, value] of m) {\n    if (f(value, key)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * Tests whether all key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const all = (m, f) => {\n  for (const [key, value] of m) {\n    if (!f(value, key)) {\n      return false\n    }\n  }\n  return true\n}\n",
      "start": 1698982453773,
      "end": 1698982454194,
      "sourcemaps": null
    },
    {
      "name": "vite:css",
      "start": 1698982454194,
      "end": 1698982454194,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1698982454194,
      "end": 1698982454194,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1698982454194,
      "end": 1698982454194,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1698982454194,
      "end": 1698982454194,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1698982454194,
      "end": 1698982454194,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1698982454194,
      "end": 1698982454194,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1698982454194,
      "end": 1698982454194,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1698982454194,
      "end": 1698982454194,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1698982454194,
      "end": 1698982454194,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1698982454194,
      "end": 1698982454194,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1698982454194,
      "end": 1698982454194,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1698982454195,
      "end": 1698982454195,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1698982454195,
      "end": 1698982454195,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1698982454195,
      "end": 1698982454195,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1698982454195,
      "end": 1698982454195,
      "order": "normal"
    }
  ]
}
