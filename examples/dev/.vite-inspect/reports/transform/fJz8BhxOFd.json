{
  "resolvedId": "D:/MyProject/5/alioth/packages/vue/dist/index.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator2; i >= 0; i--)\n    if (decorator2 = decorators[i])\n      result = (kind ? decorator2(target, key, result) : decorator2(result)) || result;\n  if (kind && result)\n    __defProp(target, key, result);\n  return result;\n};\n\n// src/iframe.ts\nimport { defineComponent, h, render, watch } from \"vue\";\nfunction cloneStyleNode() {\n  const arr = [];\n  const styles = document.getElementsByTagName(\"style\");\n  for (let i = 0; i < styles.length; i++) {\n    const newStyleNode = styles[i].cloneNode();\n    newStyleNode.innerHTML = styles[i].innerHTML;\n    arr.push(newStyleNode);\n  }\n  const links = document.getElementsByTagName(\"link\");\n  for (let i = 0; i < links.length; i++) {\n    if (links[i].rel === \"stylesheet\")\n      arr.push(links[i].cloneNode());\n  }\n  return arr;\n}\nfunction setCanvasTag(iframe) {\n  const iframeHTML = iframe.contentWindow.document.documentElement;\n  iframeHTML.classList.add(\"al-canvas\");\n}\nfunction injectStyle(iframe, styleSheet) {\n  const iframeDocument = iframe.contentWindow.document;\n  if (styleSheet) {\n    const injectStyle2 = document.createElement(\"style\");\n    injectStyle2.innerHTML = styleSheet;\n    iframeDocument.head.append(injectStyle2);\n  }\n  iframeDocument.head.append(...cloneStyleNode());\n}\nfunction injectScript(iframe) {\n  const iframeDocument = iframe.contentWindow.document;\n  const scriptTags = document.querySelectorAll(\"script[data-alioth]\");\n  for (let i = 0; i < scriptTags.length; i++) {\n    const script = document.createElement(\"script\");\n    script.src = scriptTags[i].src;\n    iframeDocument.head.append(script);\n  }\n}\nfunction proxyEvents(iframe) {\n  const iframeWindow = iframe.contentWindow;\n  const { x, y } = iframe.getBoundingClientRect();\n  [\"click\", \"mousedown\", \"mousemove\", \"mouseup\"].forEach((ev) => {\n    iframeWindow.addEventListener(ev, (e) => {\n      const proxyEvent = mouseProxy(e);\n      proxyEvent.clientX += x;\n      proxyEvent.clientY += y;\n      const event = new MouseEvent(ev, proxyEvent);\n      window.dispatchEvent(event);\n    });\n  });\n  [\"keydown\", \"keyup\"].forEach((ev) => {\n    iframeWindow.addEventListener(ev, (e) => {\n      const proxyEvent = keyBoardProxy(e);\n      const event = new KeyboardEvent(ev, proxyEvent);\n      window.dispatchEvent(event);\n    });\n  });\n}\nvar iframeLib = {};\nvar isLoad = false;\nvar iframeBox = defineComponent({\n  props: {\n    uuid: String,\n    styleSheet: String,\n    width: { type: Number, required: true },\n    height: { type: Number, required: true }\n  },\n  setup(props, { slots }) {\n    return () => {\n      if (!slots.default)\n        return null;\n      const childrenId = slots.default();\n      async function onload() {\n        const iframe = this;\n        injectScript(iframe);\n        injectStyle(iframe);\n        setCanvasTag(iframe);\n        proxyEvents(iframe);\n        if (!isLoad) {\n          const originAppend = document.head.appendChild.bind(document.head);\n          const originRemove = document.head.removeChild.bind(document.head);\n          Object.defineProperty(document.head, \"appendChild\", {\n            configurable: true,\n            get() {\n              return (el) => {\n                if (el instanceof HTMLStyleElement && el.getAttribute(\"data-vite-dev-id\"))\n                  iframe.contentWindow?.document.head.appendChild(el);\n                else\n                  originAppend(el);\n              };\n            }\n          });\n          Object.defineProperty(document.head, \"removeChild\", {\n            configurable: true,\n            get() {\n              return (el) => {\n                if (el instanceof HTMLStyleElement && el.getAttribute(\"data-vite-dev-id\"))\n                  iframe.contentWindow?.document.head.removeChild(el);\n                else\n                  originRemove(el);\n              };\n            }\n          });\n          isLoad = true;\n        }\n        render(childrenId[0], iframe.contentWindow?.document.body);\n      }\n      if (!iframeLib[props.uuid]) {\n        iframeLib[props.uuid] = document.createElement(\"iframe\");\n        iframeLib[props.uuid].onload = onload;\n        iframeLib[props.uuid].classList.add(\"iframebox\");\n      }\n      watch(() => [props.width, props.height], (n) => {\n        iframeLib[props.uuid].width = `${n[0]}`;\n        iframeLib[props.uuid].height = `${n[1]}`;\n      }, {\n        immediate: true\n      });\n      return h(\"div\", {\n        class: \"al-window\",\n        onVnodeMounted(vnode) {\n          vnode.el.appendChild(iframeLib[props.uuid]);\n        }\n      });\n    };\n  }\n});\nfunction mouseProxy(e) {\n  const newEvent = {};\n  const allProperties = [\"clientY\", \"clientX\", \"screenX\", \"screenY\", \"ctrlKey\", \"shiftKey\", \"altKey\", \"metaKey\", \"button\"];\n  allProperties.forEach((i) => {\n    newEvent[i] = e[i];\n  });\n  return newEvent;\n}\nfunction keyBoardProxy(e) {\n  const newEvent = {};\n  const allProperties = [\"key\", \"code\", \"location\", \"ctrlKey\", \"shiftKey\", \"altKey\", \"metaKey\", \"repeat\", \"isComposing\", \"charCode\", \"keyCode\", \"which\"];\n  allProperties.forEach((i) => {\n    newEvent[i] = e[i];\n  });\n  return newEvent;\n}\n\n// src/interval.ts\nimport { createFilter } from \"phecda-vue\";\n\n// src/register.ts\nimport { reactive } from \"vue\";\nvar allWidgetMap = reactive(/* @__PURE__ */ new Map());\nvar NameSpaceStore = reactive({});\nfunction getWidget(key) {\n  if (key)\n    return allWidgetMap.has(key) ? allWidgetMap.get(key) : null;\n}\nfunction createNameSpace() {\n  const widgetMap = reactive(/* @__PURE__ */ new Map());\n  return {\n    widgetMap,\n    cancel: (key) => {\n      const comp = allWidgetMap.get(key);\n      if (comp) {\n        widgetMap.delete(key);\n        allWidgetMap.delete(key);\n      }\n    },\n    getWidget(key) {\n      return widgetMap.get(key);\n    },\n    register: (module) => {\n      widgetMap.set(module.key, module);\n      allWidgetMap.set(module.key, module);\n    }\n  };\n}\nfunction getNamespace(key) {\n  if (!NameSpaceStore[key])\n    NameSpaceStore[key] = createNameSpace();\n  return NameSpaceStore[key];\n}\nvar BaseEngine = class {\n  constructor(category, key, comp, meta = {}) {\n    this.category = category;\n    this.key = key;\n    this.comp = comp;\n    this.meta = meta;\n  }\n  createRenderer(node) {\n    return new this.Renderer(node, this.comp);\n  }\n};\n\n// src/interval.ts\nvar { filter, data, setState } = createFilter({});\nvar interval = {\n  filter,\n  data,\n  setState,\n  widgetMap: allWidgetMap\n};\n\n// src/invoke.ts\nimport { markRaw } from \"vue\";\nvar isLoad2 = false;\nvar isRegister = false;\nasync function init() {\n  if (isLoad2)\n    return;\n  function registerWidget({ category, key, component, meta }) {\n    isRegister = true;\n    getNamespace(category).register?.(markRaw(new interval.engine(category, key, component, meta)));\n  }\n  window.$alioth_widget = registerWidget;\n  window.$alioth_setEngine = setEngine;\n  window.$alioth_interval = interval;\n  window.$alioth_state = ({ key, value }) => {\n    interval.setState(key, value);\n  };\n  isLoad2 = true;\n}\nfunction setEngine(engine) {\n  if (isRegister) {\n    console.warn(\"Alioth: must setEngine before register widget\");\n    return;\n  }\n  interval.engine = engine;\n}\n\n// src/renderer.ts\nimport {\n  h as h2,\n  render as render2\n} from \"vue\";\nvar decorator = (deco) => {\n  return (content) => h2(\n    deco.comp,\n    { ...deco.propsData },\n    {\n      [deco.dirct]: content\n    }\n  );\n};\nvar BaseRenderer = class {\n  constructor(node, comp) {\n    this.node = node;\n    this.comp = comp;\n    this._vnode = void 0;\n  }\n  exec() {\n    return this._vnode;\n  }\n  createSlots(slotSet, allWidgetMap2, renderType) {\n    if (!this.node.children.length)\n      return void 0;\n    const slots = {};\n    slotSet.forEach((templateName) => {\n      slots[templateName] = (slotProps) => this.node.children.map((node) => {\n        if ((node.attrs.slot || \"default\") === templateName) {\n          const widget = allWidgetMap2.get(node.attrs.key);\n          if (!widget)\n            throw new Error(`miss widget \"${node.attrs.key}\"`);\n          const ret = widget[renderType](node, slotProps);\n          return ret;\n        }\n      });\n    });\n    return slots;\n  }\n  slot(slotSet = [\"default\"], allWidgetMap2, renderType = \"render\") {\n    this._vnode = this.createSlots(\n      slotSet,\n      allWidgetMap2,\n      renderType\n    );\n    return this;\n  }\n  main(propsData) {\n    this._vnode = h2(\n      this.comp,\n      {\n        ...propsData || {}\n      },\n      this._vnode || void 0\n    );\n    return this;\n  }\n  mount(dom = document.body) {\n    if (!this._vnode)\n      return this;\n    render2(this._vnode, dom);\n    return this;\n  }\n  useDecorator() {\n    this._vnode = this.node.decorators.reduce(\n      (arr, cur) => {\n        return decorator(cur)(arr);\n      },\n      this._vnode\n    );\n    return this;\n  }\n  useDragger(dragEnter, dragOver) {\n    this._vnode.props.ondragenter = (e) => dragEnter(e, this.node);\n    this._vnode.props.ondragover = (e) => dragOver(e, this.node);\n    return this;\n  }\n  addClass(className) {\n    if (!this._vnode)\n      return this;\n    if (!this._vnode.props.class)\n      this._vnode.props.class = \"\";\n    this._vnode.props.class += ` ${className} `;\n    return this;\n  }\n  useClass(className) {\n    this._vnode.props.class = className;\n    return this;\n  }\n  addStyle(style) {\n    if (!this._vnode)\n      return this;\n    if (!this._vnode.props.style)\n      this._vnode.props.style = style;\n    this._vnode.props.style = Object.assign(this._vnode.props.style, style);\n    return this;\n  }\n  useStyle(style) {\n    this._vnode.props.style = style;\n    return this;\n  }\n  useID(id) {\n    this._vnode.props.id = id;\n    return this;\n  }\n  box() {\n    this._vnode = h2(\"div\", { default: () => [this._vnode] });\n    return this;\n  }\n};\n\n// src/component.ts\nimport { defineComponent as defineComponent2 } from \"vue\";\nfunction createRenderComponent() {\n  return defineComponent2({\n    name: \"AliothRender\",\n    inheritAttrs: false,\n    props: {\n      value: {\n        type: Object\n      },\n      type: {\n        type: String,\n        required: true\n      },\n      node: {\n        type: Object,\n        required: false\n      }\n    },\n    setup(props) {\n      return () => {\n        return props.value[props.type](props.node);\n      };\n    }\n  });\n}\n\n// src/model/baseViewModel.ts\nimport { Global, Init, Tag } from \"phecda-vue\";\nvar BaseViewModel = class {\n  constructor() {\n    this.getWidget = getWidget;\n    this.componentMap = {};\n    this.headers = [];\n    this.zones = [];\n  }\n  addZone(zone) {\n    if (this.zones.find((item) => item.label === zone.label))\n      return;\n    this.zones.push(zone);\n  }\n  addHeader(header) {\n    if (this.headers.find((item) => item.label === header.label))\n      return;\n    this.headers.push(header);\n  }\n  _init() {\n    window.$alioth_zone = (arg) => {\n      this.addZone(arg);\n    };\n    window.$alioth_header = (arg) => {\n      this.addHeader(arg);\n    };\n    window.$alioth_view = ({ key, component }) => {\n      this.componentMap[key] = component;\n    };\n  }\n};\n__decorateClass([\n  Init\n], BaseViewModel.prototype, \"_init\", 1);\nBaseViewModel = __decorateClass([\n  Global,\n  Tag(\"view\")\n], BaseViewModel);\n\n// src/index.ts\nexport * from \"alioth-lib\";\nexport {\n  BaseEngine,\n  BaseRenderer,\n  BaseViewModel,\n  NameSpaceStore,\n  allWidgetMap,\n  createNameSpace,\n  createRenderComponent,\n  getNamespace,\n  getWidget,\n  iframeBox,\n  init,\n  interval,\n  keyBoardProxy,\n  mouseProxy,\n  setEngine\n};\n//# sourceMappingURL=index.mjs.map",
      "start": 1698982452713,
      "end": 1698982452720,
      "sourcemaps": null
    },
    {
      "name": "vite:css",
      "start": 1698982452721,
      "end": 1698982452721,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1698982452721,
      "end": 1698982452721,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1698982452721,
      "end": 1698982452721,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1698982452721,
      "end": 1698982452721,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1698982452721,
      "end": 1698982452721,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1698982452721,
      "end": 1698982452721,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1698982452721,
      "end": 1698982452721,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1698982452721,
      "end": 1698982452721,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1698982452721,
      "end": 1698982452721,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1698982452721,
      "end": 1698982452721,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1698982452721,
      "end": 1698982452721,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1698982452721,
      "end": 1698982452721,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1698982452721,
      "end": 1698982452721,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1698982452721,
      "end": 1698982452721,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1698982452721,
      "end": 1698982452721,
      "order": "normal"
    }
  ]
}
