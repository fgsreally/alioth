{
  "resolvedId": "D:/MyProject/5/alioth/node_modules/.pnpm/lib0@0.2.80/node_modules/lib0/number.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/**\n * Utility helpers for working with numbers.\n *\n * @module number\n */\n\nimport * as math from './math.js'\nimport * as binary from './binary.js'\n\nexport const MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER\nexport const MIN_SAFE_INTEGER = Number.MIN_SAFE_INTEGER\n\nexport const LOWEST_INT32 = 1 << 31\nexport const HIGHEST_INT32 = binary.BITS31\nexport const HIGHEST_UINT32 = binary.BITS32\n\n/* c8 ignore next */\nexport const isInteger = Number.isInteger || (num => typeof num === 'number' && isFinite(num) && math.floor(num) === num)\nexport const isNaN = Number.isNaN\nexport const parseInt = Number.parseInt\n\n/**\n * Count the number of \"1\" bits in an unsigned 32bit number.\n *\n * Super fun bitcount algorithm by Brian Kernighan.\n *\n * @param {number} n\n */\nexport const countBits = n => {\n  n &= binary.BITS32\n  let count = 0\n  while (n) {\n    n &= (n - 1)\n    count++\n  }\n  return count\n}\n",
      "start": 1698982454597,
      "end": 1698982454717,
      "sourcemaps": null
    },
    {
      "name": "vite:css",
      "start": 1698982454717,
      "end": 1698982454717,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1698982454717,
      "end": 1698982454717,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1698982454717,
      "end": 1698982454717,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1698982454717,
      "end": 1698982454717,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1698982454717,
      "end": 1698982454717,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1698982454717,
      "end": 1698982454717,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1698982454717,
      "end": 1698982454717,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1698982454717,
      "end": 1698982454717,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1698982454717,
      "end": 1698982454717,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1698982454717,
      "end": 1698982454717,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1698982454717,
      "end": 1698982454717,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1698982454717,
      "end": 1698982454717,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1698982454717,
      "end": 1698982454717,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1698982454717,
      "end": 1698982454717,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1698982454717,
      "end": 1698982454717,
      "order": "normal"
    }
  ]
}
