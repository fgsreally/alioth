{
  "resolvedId": "D:/MyProject/5/alioth/packages/preset-layout/src/grid/editor/Container.vue?vue&type=style&index=0&lang.css",
  "transforms": [
    {
      "name": "vite:vue",
      "result": "\n.a-container {\n  min-width: 600px;\n  min-height: 300px;\n}\n",
      "start": 1698982452717,
      "end": 1698982452717,
      "sourcemaps": {
        "version": 3,
        "sources": [
          "D:/MyProject/5/alioth/packages/preset-layout/src/grid/editor/Container.vue"
        ],
        "names": [],
        "mappings": ";AAyEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB",
        "file": "D:/MyProject/5/alioth/packages/preset-layout/src/grid/editor/Container.vue",
        "sourceRoot": "",
        "sourcesContent": [
          "<script setup lang=\"ts\">\nimport { emitter, useV } from 'phecda-vue'\nimport { GridLayout } from 'grid-layout-plus'\nimport { computed, onBeforeUnmount, onMounted, ref } from 'vue'\n\nconst props = defineProps<{ a_mode: string }>()\n\nlet index = 0\nconst { doc, activePage } = useV(__PHECDA__.doc)\nfunction update() {\n  activePage.value.children.forEach((node) => {\n    node.set('layout.x', node.attrs.layout.x)\n    node.set('layout.y', node.attrs.layout.y)\n  })\n}\nconst layout = computed(() => {\n  return activePage.value.children.map(item => item.attrs.layout)\n})\nconst dom = ref<HTMLElement>(null as any)\n\nfunction addBlock(module: any, e: MouseEvent) {\n  const { clientX } = e\n  const { width, left } = dom.value.getBoundingClientRect()\n  const { key, label, meta } = module\n  const { hoverNode, root } = doc.value\n  // const index = createIndex(key)\n  const parent = hoverNode || activePage.value\n  const info = {\n    x: Math.floor(12 * (clientX - left) / width),\n    y: 0, // puts it at the bottom\n    w: 2,\n    h: 2,\n    i: `${index++}`,\n  }\n  const block = doc.value.createNode(Object.assign({\n    slot: 'default',\n    key,\n    index,\n    label,\n    propsData: {\n    },\n    layout: info,\n    level: parent === root ? 1 : parent.attrs.level + 1,\n    top: parent === activePage.value ? e.offsetY : 0,\n    left: parent === activePage.value ? e.offsetX : 0,\n  }, meta?.init || {}))\n  parent.insert(block)\n  emitter.emit('alioth:node-action', null)\n}\n\nconst { add, del } = useV(__PHECDA__.drag)\n\nonMounted(() => {\n  add(dom.value, addBlock)\n})\nonBeforeUnmount(() => {\n  del(dom.value)\n})\n</script>\n\n<template>\n  <section ref=\"dom\" class=\"a-container\" @click.stop.self=\"doc.cancel()\" @mouseup.stop>\n    <GridLayout\n      v-model:layout=\"layout\" :col-num=\"12\" :row-height=\"30\" :is-draggable=\"a_mode !== 'render'\"\n      :is-resizable=\"a_mode !== 'render'\" vertical-compact prevent-collision use-css-transforms\n      @layout-updated=\"update\"\n    >\n      <slot />\n    </GridLayout>\n  </section>\n</template>\n\n<style>\n.a-container {\n  min-width: 600px;\n  min-height: 300px;\n}\n</style>\n"
        ]
      }
    },
    {
      "name": "vite:css",
      "result": "\n.a-container {\n  min-width: 600px;\n  min-height: 300px;\n}\n",
      "start": 1698982452718,
      "end": 1698982453138,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "vite:esbuild",
      "start": 1698982453138,
      "end": 1698982453138,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1698982453138,
      "end": 1698982453138,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1698982453138,
      "end": 1698982453138,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "\n.a-container {\n  min-width: 600px;\n  min-height: 300px;\n}\n",
      "start": 1698982453138,
      "end": 1698982453142,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:define",
      "start": 1698982453142,
      "end": 1698982453142,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "result": "export default ''",
      "start": 1698982453142,
      "end": 1698982453142,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:build-html",
      "start": 1698982453142,
      "end": 1698982453142,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1698982453142,
      "end": 1698982453142,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1698982453142,
      "end": 1698982453142,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1698982453142,
      "end": 1698982453142,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1698982453142,
      "end": 1698982453142,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1698982453142,
      "end": 1698982453142,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1698982453142,
      "end": 1698982453142,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1698982453142,
      "end": 1698982453142,
      "order": "normal"
    }
  ]
}
