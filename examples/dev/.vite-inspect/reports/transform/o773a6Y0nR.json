{
  "resolvedId": "D:/MyProject/5/alioth/node_modules/.pnpm/grid-layout-plus@1.0.3_vue@3.3.4/node_modules/grid-layout-plus/es/components/grid-layout.vue.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { defineComponent as Q, reactive as D, ref as H, onBeforeMount as Z, onMounted as ee, nextTick as y, onBeforeUnmount as te, watch as u, provide as N, toRefs as O, openBlock as z, createElementBlock as _, normalizeStyle as ae, renderSlot as M, Fragment as oe, renderList as le, createBlock as ie, mergeProps as re, withCtx as ne, withDirectives as ue, createVNode as se, vShow as ce } from \"vue\";\nimport I from \"./grid-item.vue.mjs\";\nimport { useResize as de } from \"@vexip-ui/hooks\";\nimport { createEventEmitter as pe, debounce as fe, isNull as w } from \"@vexip-ui/utils\";\nimport { validateLayout as ye, compact as B, LAYOUT_KEY as ge, EMITTER_KEY as me, bottom as he, getLayoutItem as T, moveElement as ve, getAllCollisions as we, cloneLayout as Be } from \"../helpers/common.mjs\";\nimport { getBreakpointFromWidth as be, getColsFromBreakpoint as W, findOrGenerateResponsiveLayout as xe } from \"../helpers/responsive.mjs\";\nconst Se = /* @__PURE__ */ Q({\n  __name: \"grid-layout\",\n  props: {\n    autoSize: {\n      type: Boolean,\n      default: !0\n    },\n    colNum: {\n      type: Number,\n      default: 12\n    },\n    rowHeight: {\n      type: Number,\n      default: 150\n    },\n    maxRows: {\n      type: Number,\n      default: 1 / 0\n    },\n    margin: {\n      type: Array,\n      default: () => [10, 10]\n    },\n    isDraggable: {\n      type: Boolean,\n      default: !0\n    },\n    isResizable: {\n      type: Boolean,\n      default: !0\n    },\n    isMirrored: {\n      type: Boolean,\n      default: !1\n    },\n    isBounded: {\n      type: Boolean,\n      default: !1\n    },\n    useCssTransforms: {\n      type: Boolean,\n      default: !0\n    },\n    verticalCompact: {\n      type: Boolean,\n      default: !0\n    },\n    restoreOnDrag: {\n      type: Boolean,\n      default: !1\n    },\n    layout: {\n      type: Array,\n      required: !0\n    },\n    responsive: {\n      type: Boolean,\n      default: !1\n    },\n    responsiveLayouts: {\n      type: Object,\n      default: () => ({})\n    },\n    transformScale: {\n      type: Number,\n      default: 1\n    },\n    breakpoints: {\n      type: Object,\n      default: () => ({ lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0 })\n    },\n    cols: {\n      type: Object,\n      default: () => ({ lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 })\n    },\n    preventCollision: {\n      type: Boolean,\n      default: !1\n    },\n    useStyleCursor: {\n      type: Boolean,\n      default: !0\n    }\n  },\n  emits: [\n    \"layout-before-mount\",\n    \"layout-mounted\",\n    \"layout-updated\",\n    \"breakpoint-changed\",\n    \"update:layout\",\n    \"layout-ready\"\n  ],\n  setup(F, { expose: A, emit: s }) {\n    const a = F, t = D({\n      width: -1,\n      mergedStyle: {},\n      lastLayoutLength: 0,\n      isDragging: !1,\n      placeholder: {\n        x: 0,\n        y: 0,\n        w: 0,\n        h: 0,\n        i: \"\"\n      },\n      layouts: {},\n      // array to store all layouts from different breakpoints\n      lastBreakpoint: null,\n      // store last active breakpoint\n      originalLayout: null\n      // store original Layout\n    }), L = /* @__PURE__ */ new Map(), l = H(a.layout), g = H(), { observeResize: j, unobserveResize: Y } = de(), r = pe();\n    r.on(\"resizeEvent\", $), r.on(\"dragEvent\", q), Z(() => {\n      s(\"layout-before-mount\", l.value);\n    }), ee(() => {\n      s(\"layout-mounted\", l.value), y(() => {\n        ye(l.value), t.originalLayout = l.value, y(() => {\n          S(), g.value && j(g.value, fe(k, 16)), B(l.value, a.verticalCompact), s(\"layout-updated\", l.value), m(), k();\n        });\n      });\n    }), te(() => {\n      r.clearAll(), g.value && Y(g.value);\n    });\n    function $(e, n, i, p, c, d) {\n      E(e, n, i, p, c, d);\n    }\n    function q(e, n, i, p, c, d) {\n      R(e, n, i, p, c, d);\n    }\n    u(\n      () => t.width,\n      (e, n) => {\n        y(() => {\n          r.emit(\"updateWidth\", e), n === null && y(() => {\n            s(\"layout-ready\", l.value);\n          }), m();\n        });\n      }\n    ), u(\n      () => [a.layout, a.layout.length],\n      () => {\n        l.value = a.layout, P();\n      }\n    ), u(\n      () => a.colNum,\n      (e) => {\n        r.emit(\"setColNum\", e);\n      }\n    ), u(\n      () => a.rowHeight,\n      (e) => {\n        r.emit(\"setRowHeight\", e);\n      }\n    ), u(\n      () => a.isDraggable,\n      (e) => {\n        r.emit(\"setDraggable\", e);\n      }\n    ), u(\n      () => a.isResizable,\n      (e) => {\n        r.emit(\"setResizable\", e);\n      }\n    ), u(\n      () => a.isBounded,\n      (e) => {\n        r.emit(\"setBounded\", e);\n      }\n    ), u(\n      () => a.transformScale,\n      (e) => {\n        r.emit(\"setTransformScale\", e);\n      }\n    ), u(\n      () => a.responsive,\n      (e) => {\n        e || (s(\"update:layout\", t.originalLayout), r.emit(\"setColNum\", a.colNum)), k();\n      }\n    ), u(\n      () => a.maxRows,\n      (e) => {\n        r.emit(\"setMaxRows\", e);\n      }\n    ), u(() => a.margin, m), N(\n      ge,\n      D({\n        ...O(a),\n        ...O(t),\n        increaseItem: U,\n        decreaseItem: G\n      })\n    ), N(me, r), A({ state: t, getItem: K, resizeEvent: E, dragEvent: R });\n    function U(e) {\n      L.set(e.i, e);\n    }\n    function G(e) {\n      L.delete(e.i);\n    }\n    function K(e) {\n      return L.get(e);\n    }\n    function P() {\n      if (!w(l.value) && !w(t.originalLayout)) {\n        if (l.value.length !== t.originalLayout.length) {\n          const e = J(l.value, t.originalLayout);\n          if (e.length > 0)\n            if (l.value.length > t.originalLayout.length)\n              t.originalLayout = t.originalLayout.concat(e);\n            else {\n              const n = new Set(e.map((i) => i.i));\n              t.originalLayout = t.originalLayout.filter((i) => !n.has(i.i));\n            }\n          t.lastLayoutLength = l.value.length, S();\n        }\n        B(l.value, a.verticalCompact), r.emit(\"updateWidth\", t.width), m(), s(\"layout-updated\", l.value);\n      }\n    }\n    function m() {\n      t.mergedStyle = {\n        height: V()\n      };\n    }\n    function k() {\n      g.value && (t.width = g.value.offsetWidth), r.emit(\"resizeEvent\");\n    }\n    function V() {\n      return a.autoSize ? he(l.value) * (a.rowHeight + a.margin[1]) + a.margin[1] + \"px\" : void 0;\n    }\n    let C;\n    function R(e, n, i, p, c, d) {\n      let o = T(l.value, n);\n      w(o) && (o = { h: 0, w: 0, x: 0, y: 0, i: \"\" }), e === \"dragstart\" && !a.verticalCompact && (C = l.value.reduce(\n        (v, { i: b, x: f, y: h }) => ({\n          ...v,\n          [b]: { x: f, y: h }\n        }),\n        {}\n      )), e === \"dragmove\" || e === \"dragstart\" ? (t.placeholder.i = n, t.placeholder.x = o.x, t.placeholder.y = o.y, t.placeholder.w = d, t.placeholder.h = c, y(() => {\n        t.isDragging = !0;\n      }), r.emit(\"updateWidth\", t.width)) : y(() => {\n        t.isDragging = !1;\n      }), l.value = ve(l.value, o, i, p, !0, a.preventCollision), a.restoreOnDrag ? (o.static = !0, B(l.value, a.verticalCompact, C), o.static = !1) : B(l.value, a.verticalCompact), r.emit(\"compact\"), m(), e === \"dragend\" && (C = void 0, s(\"layout-updated\", l.value));\n    }\n    function E(e, n, i, p, c, d) {\n      let o = T(l.value, n);\n      w(o) && (o = { h: 0, w: 0, x: 0, y: 0, i: \"\" });\n      let v;\n      if (a.preventCollision) {\n        const b = we(l.value, { ...o, w: d, h: c }).filter(\n          (f) => f.i !== o.i\n        );\n        if (v = b.length > 0, v) {\n          let f = 1 / 0, h = 1 / 0;\n          b.forEach((x) => {\n            x.x > o.x && (f = Math.min(f, x.x)), x.y > o.y && (h = Math.min(h, x.y));\n          }), Number.isFinite(f) && (o.w = f - o.x), Number.isFinite(h) && (o.h = h - o.y);\n        }\n      }\n      v || (o.w = d, o.h = c), e === \"resizestart\" || e === \"resizemove\" ? (t.placeholder.i = n, t.placeholder.x = i, t.placeholder.y = p, t.placeholder.w = o.w, t.placeholder.h = o.h, y(() => {\n        t.isDragging = !0;\n      }), r.emit(\"updateWidth\", t.width)) : y(() => {\n        t.isDragging = !1;\n      }), a.responsive && X(), B(l.value, a.verticalCompact), r.emit(\"compact\"), m(), e === \"resizeend\" && s(\"layout-updated\", l.value);\n    }\n    function X() {\n      const e = be(a.breakpoints, t.width), n = W(e, a.cols);\n      !w(t.lastBreakpoint) && !t.layouts[t.lastBreakpoint] && (t.layouts[t.lastBreakpoint] = Be(l.value));\n      const i = xe(\n        t.originalLayout,\n        t.layouts,\n        a.breakpoints,\n        e,\n        t.lastBreakpoint,\n        n,\n        a.verticalCompact\n      );\n      t.layouts[e] = i, t.lastBreakpoint !== e && s(\"breakpoint-changed\", e, i), s(\"update:layout\", i), t.lastBreakpoint = e, r.emit(\"setColNum\", W(e, a.cols));\n    }\n    function S() {\n      t.layouts = Object.assign({}, a.responsiveLayouts);\n    }\n    function J(e, n) {\n      const i = new Set(n.map((o) => o.i)), p = new Set(e.map((o) => o.i)), c = e.filter((o) => !i.has(o.i)), d = n.filter((o) => !p.has(o.i));\n      return c.concat(d);\n    }\n    return (e, n) => (z(), _(\"div\", {\n      ref_key: \"wrapper\",\n      ref: g,\n      class: \"vgl-layout\",\n      style: ae(t.mergedStyle)\n    }, [\n      e.$slots.default ? M(e.$slots, \"default\", { key: 0 }) : (z(!0), _(oe, { key: 1 }, le(l.value, (i) => (z(), ie(I, re({\n        key: i.i\n      }, i), {\n        default: ne(() => [\n          M(e.$slots, \"item\", { item: i })\n        ]),\n        _: 2\n      }, 1040))), 128)),\n      ue(se(I, {\n        class: \"vgl-item--placeholder\",\n        x: t.placeholder.x,\n        y: t.placeholder.y,\n        w: t.placeholder.w,\n        h: t.placeholder.h,\n        i: t.placeholder.i\n      }, null, 8, [\"x\", \"y\", \"w\", \"h\", \"i\"]), [\n        [ce, t.isDragging]\n      ])\n    ], 4));\n  }\n});\nexport {\n  Se as default\n};\n//# sourceMappingURL=grid-layout.vue.mjs.map\n",
      "start": 1698982452786,
      "end": 1698982452932,
      "sourcemaps": null
    },
    {
      "name": "vite:css",
      "start": 1698982452933,
      "end": 1698982452933,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1698982452933,
      "end": 1698982452933,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1698982452933,
      "end": 1698982452933,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1698982452933,
      "end": 1698982452933,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1698982452933,
      "end": 1698982452933,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1698982452933,
      "end": 1698982452933,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1698982452933,
      "end": 1698982452933,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1698982452933,
      "end": 1698982452933,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1698982452933,
      "end": 1698982452933,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1698982452933,
      "end": 1698982452933,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1698982452933,
      "end": 1698982452933,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1698982452933,
      "end": 1698982452933,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1698982452933,
      "end": 1698982452933,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1698982452933,
      "end": 1698982452933,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1698982452933,
      "end": 1698982452933,
      "order": "normal"
    }
  ]
}
