import{_ as e,o as l,c as o,U as a}from"./chunks/framework.08bb9a2c.js";const _=JSON.parse('{"title":"低代码困境","description":"","frontmatter":{},"headers":[],"relativePath":"blog/index.md","filePath":"blog/index.md","lastUpdated":1700703928000}'),i={name:"blog/index.md"},t=a('<h1 id="低代码困境" tabindex="-1">低代码困境 <a class="header-anchor" href="#低代码困境" aria-label="Permalink to &quot;低代码困境&quot;">​</a></h1><p>在一切开始之前，我至少要说一下我对低代码体系的一些想法</p><h2 id="究竟要干什么" tabindex="-1">究竟要干什么 <a class="header-anchor" href="#究竟要干什么" aria-label="Permalink to &quot;究竟要干什么&quot;">​</a></h2><p>我经常看到一些团队写的宣传文章，宣传他们或自研或开源的低代码平台，文中对其功能的描述可谓是天花乱坠，着实让人好奇且兴奋。但如果在文章中看到一句“快速搭建页面”之类的话，就真的很败人兴致。</p><p>为什么这么说？就我个人而言，这个团队或许技术一流，但他们似乎不太知道自己要干什么。</p><p>就比如面试题中总会遇到性能优化的考点，这是一个非常有意思、也非常重要的事情，但真在面试中遇到，整个过程就是一个对面试官和面试者的双向折磨，因为其往往只是考一些宽泛的，通用的东西，而实际上这种通用的东西往往意义不大。</p><p>简而言之，我认为<code>快速搭建页面</code>是一个宽泛的需求（什么类型的页面？哪方面表现得快速？谁在搭建？），这些团队似乎并不清楚究竟要什么，然后就急冲冲地开始了开发银弹的道路</p><blockquote><p>在一些低代码视频和文章下面的评论区中，常有人说“这比Dreamweaver如何？”，拿一个十几年前过时的产品来对比当下的产品，真的是一件让人难过的事情（我当然没有那么难过，毕竟我没有用过<code>dreamweaver</code>，但如果来一句“这比<code>asp.net</code>的控件拖拽如何”，我真的会破大防）</p></blockquote><p>好的，那么如果一个团队比较务实，他们就会考虑得更具体一点，比如：</p><ol><li><code>这个平台主要是做营销的页面</code></li><li><code>我们需要一个做电商展示页面的平台</code></li><li><code>用于快速创建新项目/在旧项目中嵌入</code></li><li><code>要能给非开发人员使用</code>。</li></ol><p>实际上许多公司内部自用的、效果比较好的平台大多都是如此</p><h2 id="还要干什么" tabindex="-1">还要干什么 <a class="header-anchor" href="#还要干什么" aria-label="Permalink to &quot;还要干什么&quot;">​</a></h2><p>当排除万难，把一个低代码平台推上线（这个时候可能还称不上平台，只能算是个可视化的工具），内部的一些使用也卓有成效时，上级可能会希望扩展使用，比如：“这个项目低代码效果不错，那可以拿到另一个项目试试”，这个时候，如果一个低代码系统，从做营销页面，到能做保险单填写，难度和重写没啥区别，你只能在原有项目上打上一个又一个的补丁，祈祷这玩意儿真的能用。</p><p>如果运气不错的话，一切顺利，但当任务需求再更改，下一位开发者接手的时候，他就会意识到上当：<code>项目中结构混乱，使用逻辑极其反人类</code>。</p><p>我们好像又需要一些宽泛的东西</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>我不认为低代码只能处理简单的东西，低代码之于前端，如sql之于数据库，sql刚出来的时候，也说只能做简单的需求，而现在基本都靠sql了。</p><p>现在可能只是需要一个<code>sql</code>这样抽象的，泛用的东西，然后低代码平台内部去做实现</p></div><h2 id="难点是什么" tabindex="-1">难点是什么 <a class="header-anchor" href="#难点是什么" aria-label="Permalink to &quot;难点是什么&quot;">​</a></h2><p>实际上，具体的技术难题还一个都没说，比如：</p><ol><li>布局系统应该用什么</li><li>导出的东西应该是什么</li><li>如何添加自定义物料</li><li>如何绑定数据、逻辑编写</li><li>如何定位bug</li><li>如何进入现有ci/cd,审核流程</li><li>如何对接后端</li><li>如何版本更新</li></ol><div class="tip custom-block"><p class="custom-block-title">延申</p><p>这只是一部分的问题，而有些问题并不是只需要<code>解决</code>，而是需要<code>漂亮的解决</code>，比如：</p><ol><li>添加自定义物料很容易，本地打个包，上传服务器，浏览器中再更新，就能搞定，但在开发时，需要调整组件，就只能重复这个冗长的行为。</li><li>布局很容易，如果用灵活布局（就是absolute），那当用户屏幕尺寸不对的时候，怎么办，而如果用其他布局，平台中又应该怎么操作？</li><li>提供restful api好像很灵活？但这没有提升开发效率！代码编写-&gt;物料编写+可视化编写，仅仅是操作变化了,流程没有减少，反而更多了。</li></ol></div><p>问题不少，如果一开始掉以轻心，后面就算想解决也没法子了</p><p>经常出现的一个现象就是：</p><p>团队内一个人向上级画了饼，启动了低代码的项目，或许是没有意识到问题，或许是到一半才意识到，而解决问题需要的成本则巨大，上级一催，开发者没有办法，只好交上去一个暂时的版本，这个版本在demo中表现很好，团队开始推广，但在其他成员使用中就会遇到各种各样的问题，而他们往对问题的原因，平台运作的原理并不了解，导致开发者疲于奔命，使用者效率低下。</p><blockquote><p>说得更实在一点，即使这个项目在不断的迭代后，符合所有人的需求了，只有这个开发者能获得好处，而由于种种bug拖慢的开发进程，却又其他使用者买单。没有人会愿意做这种事的</p></blockquote><p>我只是想说，低代码开发中的困难，可能没有预想的那么简单</p><h2 id="为什么不用别人的" tabindex="-1">为什么不用别人的 <a class="header-anchor" href="#为什么不用别人的" aria-label="Permalink to &quot;为什么不用别人的&quot;">​</a></h2><p>既然低代码平台自己做费劲，为什么不直接用现成的产品？</p><p>这是一个非常棒的想法，可以尝试问一下相应企业的低代码产品，ta会跟你讲：</p><ol><li>啊我们能提供好多好多物料...</li><li>啊我们有好多好多模板..</li><li>额，自定义啊这个，也是可以的，只要这个特定的格式xx...</li><li>啊我们这里有完整的培训...</li></ol><p>说人话就是，花钱，难用。可能仅仅符合demo的需要，可能是不靠谱，也可能是不对口。</p><blockquote><p>同样，一些特定领域的平台可能还不错，比如简历生成。但这个领域未必是你需要的</p></blockquote><h2 id="为什么不愿意用" tabindex="-1">为什么不愿意用 <a class="header-anchor" href="#为什么不愿意用" aria-label="Permalink to &quot;为什么不愿意用&quot;">​</a></h2><p>好吧，排除千难万难，总算弄出来了一个看上去不错的、或许是真的不错的低代码系统，但问题没有终止，除了开发这个系统的自己人，其他人不会对此感兴趣，无论推荐他们多少次。</p><p>或许作为开发者的人无法理解，但使用者是完全有原因的：</p><ol><li>为什么有那么多的配置项，这些配置项怎么名字稀奇古怪的，我好像不需要这么多的配置</li><li>为什么不同物料配置不同，难道我要分别记住吗？</li><li>为什么会突然报错？我什么都没做啊</li><li>公式编辑器里要怎么写啊，没有补全没有类型，写起来感觉真差</li><li>添加物料怎么如此困难，这比我自己写组件麻烦多了</li></ol><p>你看，即使没有任何技术上的问题，情况依然糟糕，<code>能用</code>和<code>愿意用</code>真的差了很多。</p><h2 id="end" tabindex="-1">end <a class="header-anchor" href="#end" aria-label="Permalink to &quot;end&quot;">​</a></h2><p>到这里，我没有讲玉衡的任何一个feature，但如果你认同以上的，或许你会在这个不成熟的项目中发现更多吸引人的地方</p>',38),c=[t];function d(p,r,s,n,h,u){return l(),o("div",null,c)}const m=e(i,[["render",d]]);export{_ as __pageData,m as default};
