import{_ as s,o as a,c as n,U as p}from"./chunks/framework.08bb9a2c.js";const i=JSON.parse('{"title":"功能模块","description":"","frontmatter":{},"headers":[],"relativePath":"core/example/function.md","filePath":"core/example/function.md","lastUpdated":1707989327000}'),l={name:"core/example/function.md"},o=p(`<h1 id="功能模块" tabindex="-1">功能模块 <a class="header-anchor" href="#功能模块" aria-label="Permalink to &quot;功能模块&quot;">​</a></h1><p>比如，我希望通过快捷键<code>ctrl+a</code>添加一个页面，并将该页面设置为正在编辑页面，可以这样</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> event_test</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">AliothEvent</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">alioth</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">eventStack</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">data</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">keyboard</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">ctrl+a</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">add-page</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">execute</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">addPage</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">activePage</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">useV</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">__PHECDA__</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">doc</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">activePage</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">value</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">addPage</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">pushQueue</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><blockquote><p>基于<code>phecda-vue</code></p></blockquote><p>简而言之，就是应用将一些模块设置为全局，然后在预设中通过全局变量找到，并通过<code>phecda-vue</code>操作</p><p>注意，有哪些模块？模块有哪些功能，这取决于平台中注入了哪些模块，以默认的应用为例：<a href="https://github.com/fgsreally/alioth/tree/main/app/src/models" target="_blank" rel="noreferrer">详见</a></p><p>换言之，你可以自己设置一个<code>ai</code>模块，并在自己的平台中注入，再在预设里调用，就可以使用<code>ai</code>功能了</p><div class="warning custom-block"><p class="custom-block-title">提醒</p><p>搭建自己平台时，最好直接将<code>app/src/models</code>中文件复制粘贴，少量修改，然后添加自己的模块就行</p><p>这是因为预设的功能和默认模块中的一部分相关，移除会导致预设出现一些问题，</p><p>如果执意删去，请实现对应的标准,<a href="./preset.html#自定义预设">详见</a></p></div>`,8),e=[o];function t(c,r,D,F,y,C){return a(),n("div",null,e)}const d=s(l,[["render",t]]);export{i as __pageData,d as default};
